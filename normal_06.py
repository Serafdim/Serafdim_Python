# Задание-1:
# Реализуйте описаную ниже задачу, используя парадигмы ООП:
# В школе есть Классы(5А, 7Б и т.д.), в которых учатся Ученики.
# У каждого ученика есть два Родителя(мама и папа).
# Также в школе преподают Учителя. Один учитель может преподавать 
# в неограниченном кол-ве классов свой определенный предмет. 
# Т.е. Учитель Иванов может преподавать математику у 5А и 6Б,
# но больше математику не может преподавать никто другой.

# Выбранная и заполненная данными структура должна решать следующие задачи:
# 1. Получить полный список всех классов школы
# 2. Получить список всех учеников в указанном классе
#  (каждый ученик отображается в формате "Фамилия И.О.")
# 3. Получить список всех предметов указанного ученика 
#  (Ученик --> Класс --> Учителя --> Предметы)
# 4. Узнать ФИО родителей указанного ученика
# 5. Получить список всех Учителей, преподающих в указанном классе



class Scool:
    def __init__(self, classes, teachers, subjects):
        self.classes = classes
        self.teachers = teachers
        self.subjects = subjects

    def sc_classes(self):
        class_in_scool = classes
        return class_in_scool

    def subj(self):
        subj_teach = {teacher: subject for teacher, subject in zip(teachers, subjects)}
        return subj_teach




classes = ('2A', '7B', '8P')
teachers = ('УчИванов','УчПетров','УчСидоров')
subjects = ('русский','математика','физика')

scool = Scool(classes, teachers, subjects)
print(scool.sc_classes())
print(scool.subj())